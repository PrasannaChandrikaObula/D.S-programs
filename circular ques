#include<stdio.h>
# include<stdlib.h>
#define max 4
int a[max],front=-1,rear=-1;
void enque(int x)
{
        if(front==-1)
        {
            front=rear=0;
            a[rear]=x;
        }
        else
        {
            if((front==0&&rear==max-1)||(front==rear+1))
        {
            printf("que overflow");
        }
        else if(rear==max-1)
        {
            rear=0;
            a[rear]=x;
           
        }
        else
        {
            rear=rear+1;
            a[rear]=x;
        }
        }
}
int deque()
{
    int x;
    if(front==-1)
        {
            return -1;
        }
        else
        {
            x=a[front];
            if(front==rear)
            {
                front=rear=-1;
            }
            else if(front==max-1)
            {
                front=0;
            }
            else
            {
                front=front+1;
            }
            return x;
           
        }
           
}
void display()
{
    int i;
    if(front==-1)
    {
        printf("no elements to print");
    }
    else
    {
        if(front<=rear)
        {
        for(i=front;i<=rear;i++)
        {
            printf("%d\n",a[i]);
        }
        }
        else
        {
            for(i=front;i<=max-1;i++)
            {
                printf("%d\n",a[i]);
            }
            for(i=0;i<=rear;i++)
            {
                printf("%d\n",a[i]);
            }
        }
    }
}
void main()
{
    int x,ch;
    while(1)
    {
    printf("1.enque\n2.deque\n3.display\n4.exit\n");
    printf("enter choice");
    scanf("%d",&ch);
    switch(ch)
    {
        case 1:printf("enter element to push");
               scanf("%d",&x);
               enque(x);
               break;
        case 2:x=deque();
               if(x==-1)
                {
                    printf("no element to delete");
                }
                else
                {
                    printf("deleted element is %d\n",x);
                }
                break;
        case 3:printf("displaying the array\n");
               display();
               break;
        case 4:exit(0);
               break;
    }
    }
}
